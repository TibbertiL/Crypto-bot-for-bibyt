package com.tibbertil.botforbibyt.controller;

import com.tibbertil.botforbibyt.dto.CoinDto;
import com.tibbertil.botforbibyt.dto.LogDto;
import com.tibbertil.botforbibyt.dto.OrderDto;
import com.tibbertil.botforbibyt.dto.StatusResponseDto;
import com.tibbertil.botforbibyt.dto.StrategyDto;
import com.tibbertil.botforbibyt.service.BotService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequiredArgsConstructor
@RequestMapping("/api")
public class BotController {

    private final BotService botService;

    //üìÑ GET /api/price/{symbol}
    //–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –∑–∞–ø–∏—Å–µ–π –ø–æ –º–æ–Ω–µ—Ç–µ.
    @GetMapping("/price/{symbol}")
    public List<CoinDto> coinRecords(@PathVariable String symbol){
        return botService.coinRecords(symbol);
    }

    //üìÑ GET /api/strategy
    //–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π.
    @GetMapping("/strategy")
    public List<StrategyDto> listOfStrategies(){
        return botService.listOfStrategies();
    }

    //üìÑ POST /api/strategy
    //–°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.
    @PostMapping("/strategy")
    public StrategyDto createStrategy(@RequestBody StrategyDto strategyDto){
        return botService.createStrategy(strategyDto);
    }

    //üìÑ PUT /api/strategy/{id}
    //–û–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (buyBelow, sellAbove –∏ —Ç.–¥.).
    @PutMapping("/strategy/{id}")
    public StrategyDto editStrategy(@PathVariable Long id, @RequestBody StrategyDto strategyDto) throws Exception {
        return botService.editStrategy(id, strategyDto);
    }

    //üìÑ DELETE /api/strategy/{id}
    // –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ id
    @DeleteMapping("/strategy/{id}")
    public StatusResponseDto deleteStrategy(@PathVariable Long id) {
        return botService.deleteStrategy(id);
    }

    //üìÑ GET /api/orders
    //–ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤—Å–µ—Ö –æ—Ä–¥–µ—Ä–æ–≤.
    @GetMapping("/orders")
    public List<OrderDto> orderHistory(){
        return botService.orderHistory();
    }

    //üìÑ GET /api/logs
    //–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏).
    @GetMapping("/logs")
    public List<LogDto> listOfLogs(){
        return botService.listOfLogs();
    }
}
